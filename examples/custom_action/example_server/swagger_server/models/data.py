# coding: utf-8

from __future__ import absolute_import

from .base_model_ import Model
from .request import Request
from .responder import Responder
from .. import util


class Data(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(
        self, request: Request = None, responder: Responder = None, action: str = None
    ):
        """Data - a model defined in Swagger

        :param request: The request of this Data.
        :type request: Request
        :param responder: The responder of this Data.
        :type responder: Responder
        :param action: The action of this Data.
        :type action: str
        """
        self.swagger_types = {"request": Request, "responder": Responder, "action": str}

        self.attribute_map = {
            "request": "request",
            "responder": "responder",
            "action": "action",
        }
        self._request = request
        self._responder = responder
        self._action = action

    @classmethod
    def from_dict(cls, dikt) -> "Data":
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Data of this Data.
        :rtype: Data
        """
        return util.deserialize_model(dikt, cls)

    @property
    def request(self) -> Request:
        """Gets the request of this Data.


        :return: The request of this Data.
        :rtype: Request
        """
        return self._request

    @request.setter
    def request(self, request: Request):
        """Sets the request of this Data.


        :param request: The request of this Data.
        :type request: Request
        """

        self._request = request

    @property
    def responder(self) -> Responder:
        """Gets the responder of this Data.


        :return: The responder of this Data.
        :rtype: Responder
        """
        return self._responder

    @responder.setter
    def responder(self, responder: Responder):
        """Sets the responder of this Data.


        :param responder: The responder of this Data.
        :type responder: Responder
        """

        self._responder = responder

    @property
    def action(self) -> str:
        """Gets the action of this Data.


        :return: The action of this Data.
        :rtype: str
        """
        return self._action

    @action.setter
    def action(self, action: str):
        """Sets the action of this Data.


        :param action: The action of this Data.
        :type action: str
        """

        self._action = action
